name: CD - Deploy to ECR

on:
  push:
    branches:
      - main 

jobs:
  build-and-push-to-ecr:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.build_push.outputs.image_tag }}
      image_uri: ${{ steps.build_push.outputs.image_uri }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      with:
        registry-type: public

    - name: Build, tag, and push image to Amazon ECR
      id: build_push
      env:
        ECR_PUBLIC_REPOSITORY_URI: ${{ secrets.ECR_PUBLIC_REPOSITORY_URI }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t "$ECR_PUBLIC_REPOSITORY_URI:$IMAGE_TAG" -t "$ECR_PUBLIC_REPOSITORY_URI:latest" .
        docker push "$ECR_PUBLIC_REPOSITORY_URI:$IMAGE_TAG"
        docker push "$ECR_PUBLIC_REPOSITORY_URI:latest"
        
        # Guardar URI de la imagen para la notificación
        echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
        echo "image_uri=IMAGE_URI" >> $GITHUB_OUTPUT
        

  Slack-Notification:
    name: Slack Notification
    runs-on: ubuntu-latest
    needs: build-and-push-to-ecr
    # Se ejecuta siempre para poder notificar tanto el éxito como el fracaso.
    if: always() 
    steps:
    - name: Send Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_RELEASES }}
        # El título y el color cambian dinámicamente según el resultado del job anterior.
        SLACK_COLOR: ${{ needs.build-and-push-to-ecr.result == 'success' && 'good' || 'danger' }}
        SLACK_TITLE: ${{ needs.build-and-push-to-ecr.result == 'success' && '✅ Despliegue Exitoso a ECR' || '❌ Despliegue Fallido' }}
        SLACK_USERNAME: CD Pipeline Bot
        SLACK_ICON: https://github.com/favicon.ico
        SLACK_MESSAGE: |
          *Repositorio:* `${{ github.repository }}`
          *Rama:* `${{ github.ref_name }}`
          *Commit:* `${{ github.sha }}`
          *Autor:* `${{ github.actor }}`
          
          ${{ needs.build-and-push-to-ecr.result == 'success' && '✅ La imagen ha sido desplegada con éxito a Amazon ECR.' || '❌ El despliegue de la imagen ha fallado. Revisa los logs para más detalles.' }}

          ${{ needs.build-and-push-to-ecr.result == 'success' && format('Detalles:\n- Imagen: `{0}`\n- Tag: `{1}`', needs.build-and-push-to-ecr.outputs.image_uri, needs.build-and-push-to-ecr.outputs.image_tag) || '' }}
          
          [Ver logs del workflow](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})