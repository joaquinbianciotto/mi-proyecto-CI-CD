# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Continuous Integration

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest
    steps:
    - name: Checkout code  
      uses: actions/checkout@v4

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test with pytest
      run: |
        pytest
    - name: Lint with flake8
      run: |
        flake8 app/ 

    - name: Validate dockerfile build
      run: |
        docker build -t myapp:latest .

  slackNotification:
    name: Slack Notification
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_COLOR: ${{ job.status == 'success' && 'good' || job.status == 'failure' && 'danger' || 'warning' }}
        SLACK_TITLE: "Estado del CI/CD: ${{ job.status }}"
        SLACK_USERNAME: CI/CD Bot
        SLACK_ICON: https://github.com/favicon.ico
        SLACK_FOOTER: "FastAPI CI/CD Pipeline"
        SLACK_MESSAGE: |
          *Repositorio:* ${{ github.repository }}
          *Rama:* ${{ github.ref_name }}
          *Commit:* ${{ github.event.after || github.sha }}
          *Autor:* ${{ github.actor }}
          *Evento:* ${{ github.event_name }}
          
          Validaciones completadas:
          ✅ Tests con pytest
          ✅ Lint con flake8
          ✅ Build de Docker